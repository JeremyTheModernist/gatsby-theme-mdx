{"version":3,"sources":["../../../src/utils/worker/render-html.js"],"names":["fs","require","Promise","join","getPageHtmlFilePath","renderHTML","htmlComponentRendererPath","paths","envVars","forEach","key","value","process","env","map","path","resolve","reject","htmlComponentRenderer","default","throwAway","htmlString","outputFile","cwd","e","context"],"mappings":";;;;;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAE,UAAF,CAAlB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAE,UAAF,CAAvB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAWF,OAAO,CAAE,MAAF,CAAxB;;AACA,MAAM;AAAEG,EAAAA;AAAF,IAA0BH,OAAO,CAAE,uBAAF,CAAvC;;AAEO,SAASI,UAAT,CAAoB;AAAEC,EAAAA,yBAAF;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAApB,EAAmE;AACxE;AACA;AACAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAmBC,OAAO,CAACC,GAAR,CAAYH,GAAZ,IAAmBC,KAAtD;AAEA,SAAOT,OAAO,CAACY,GAAR,CACLP,KADK,EAELQ,IAAI,IACF,IAAIb,OAAJ,CAAY,CAACc,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAMC,qBAAqB,GAAGjB,OAAO,CAACK,yBAAD,CAArC;;AACA,QAAI;AACFY,MAAAA,qBAAqB,CAACC,OAAtB,CAA8BJ,IAA9B,EAAoC,CAACK,SAAD,EAAYC,UAAZ,KAA2B;AAC7DL,QAAAA,OAAO,CACLhB,EAAE,CAACsB,UAAH,CACElB,mBAAmB,CAACD,IAAI,CAACS,OAAO,CAACW,GAAR,EAAD,EAAiB,QAAjB,CAAL,EAAgCR,IAAhC,CADrB,EAEEM,UAFF,CADK,CAAP;AAMD,OAPD;AAQD,KATD,CASE,OAAOG,CAAP,EAAU;AACV;AACAA,MAAAA,CAAC,CAACC,OAAF,GAAY;AACVV,QAAAA;AADU,OAAZ;AAGAE,MAAAA,MAAM,CAACO,CAAD,CAAN;AACD;AACF,GAlBD,CAHG,CAAP;AAuBD","sourcesContent":["const fs = require(`fs-extra`)\nconst Promise = require(`bluebird`)\nconst { join } = require(`path`)\nconst { getPageHtmlFilePath } = require(`../../utils/page-html`)\n\nexport function renderHTML({ htmlComponentRendererPath, paths, envVars }) {\n  // This is being executed in child process, so we need to set some vars\n  // for modules that aren't bundled by webpack.\n  envVars.forEach(([key, value]) => (process.env[key] = value))\n\n  return Promise.map(\n    paths,\n    path =>\n      new Promise((resolve, reject) => {\n        const htmlComponentRenderer = require(htmlComponentRendererPath)\n        try {\n          htmlComponentRenderer.default(path, (throwAway, htmlString) => {\n            resolve(\n              fs.outputFile(\n                getPageHtmlFilePath(join(process.cwd(), `public`), path),\n                htmlString\n              )\n            )\n          })\n        } catch (e) {\n          // add some context to error so we can display more helpful message\n          e.context = {\n            path,\n          }\n          reject(e)\n        }\n      })\n  )\n}\n"],"file":"render-html.js"}